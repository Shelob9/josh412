name: Workers

on: [push]

jobs:
  paths-filter:
      runs-on: ubuntu-latest
      outputs:
        joshdata: ${{ steps.filter.outputs.joshdata }}
        tooter: ${{ steps.filter.outputs.tooter }}
      steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            joshdata:
              - 'workers/joshdata/**'
            tooter:
              - 'workers/tooter/**'

      # run only if 'joshdata' files were changed
      - name: joshdata changed
        if: steps.filter.outputs.joshdata == 'true'
        run: echo "joshdata changed"

      # run only if 'tooter' files were changed
      - name: tooter changed
        if: steps.filter.outputs.tooter == 'true'
        run: echo "tooter changed"

      # run only if 'cdn' files were changed
      - name: cdn changed
        if: steps.filter.outputs.cdn == 'true'
        run: echo "cdn changed"

  joshdata:
    runs-on: ubuntu-latest
    needs: paths-filter
    if: needs.paths-filter.outputs.joshdata == 'true'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: install joshdata
        run: npm i
        working-directory: workers/joshdata

      - name: test
        run: npm run test
        working-directory: workers/joshdata

      - uses: actions/checkout@v3
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        working-directory: workers/joshdata
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}

  tooter:
    runs-on: ubuntu-latest
    needs: paths-filter
    if: needs.paths-filter.outputs.tooter == 'true'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: install tooter
        run: npm i
        working-directory: workers/tooter

      - name: test
        run: npm run test

        working-directory: workers/tooter

      - uses: actions/checkout@v3
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        working-directory: workers/tooter
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}

  cdn:
    runs-on: ubuntu-latest
    needs: paths-filter
    if: needs.paths-filter.outputs.cdn == 'true'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        working-directory: workers/cdn
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
